package codigo;


import java.util.*;
import java.io.*;
import java_cup.runtime.Symbol;
import java.util.logging.Level;
import java.util.Stack;
import java.awt.Font;
import javax.swing.JLabel;
import modelos.LabelError;
import modelos.Gramatica;
import modelos.CodigoIntermedio;
import java.awt.Color;

action code
    {:
        Hashtable table = new Hashtable();
        private final int SINTACTICO = 232;
    :};

parser code
{:

    static TablaSimbolos tablaSimbolos = new TablaSimbolos();
    static int verificarTipo = 0;
    private final int SINTACTICO = 232;
    
    static Stack <String> listaIdentificadores = new Stack <String>();
	public static void main(String args[]) throws Exception{
        System.out.println("EMPEZAMOS");
		new Sintax(new LexerCup(System.in)).parse();
	}
    
    private Symbol s;
    
    public Symbol getS(){
        return this.s;
    }

    public void syntax_error(Symbol s){     
        JLabel lb = new JLabel();                       
        lb.setForeground(new Color(217, 33, 51));
        lb.setFont(new Font("Verdana", Font.PLAIN, 14));
        lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb.setText("Error en la línea " + (s.right+1) + ". Error sintáctico, cadena inesperada: "+ s.value );                       
        VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico", s.right+1,SINTACTICO));
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        JLabel lb = new JLabel();       
        lb.setForeground(new Color(217, 33, 51));
        lb.setFont(new Font("Verdana", Font.PLAIN, 14));
        lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb.setText("Error en la línea " + (s.right+1) + ". Error sintáctico, cadena inesperada: "+ s.value );                       
        VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico", s.right+1,SINTACTICO));
    }

    public void linea(int right){
        System.out.println("Linea: "+right);
    }

:};

/*----------------------------------------  TERMINALES  ------------------------------------------------------------*/
terminal String IDENTIFICADOR;
terminal Integer NUMERO;
terminal Double DECIMAL;
terminal String CADENA_TEXTO,TRUE, FALSE;
terminal String BROKEN,JUST, WORD, FLAG;
terminal SETFILAMENTTYPE, FILLRECTANGLE, DRAWRECTANGLE, SLEEP, FILLCIRCLE, DRAWCIRCLE,
FILLTRIANGLE, DRAWTRIANGLE, STOP, GETEXTRUSORX, GETEXTRUSORY, GETEXTRUSORZ, GETFILAMENTTYPE, SETNEWFILAMENT,
GETFILAMENT, GETTEMPERATURE, END, SAME, GET, GIVE, FOR, IF, ELSE, SELECT, EMPTY,
WHILE, CASE,  CUT, BEGIN, MODEL, DEFECT, NEW, DO, GOBACK,  HOME,
PRINTERPORT, METHOD, CHECK, TRAP, CLASS, MAIN, SIGNO_DE_IGUAL, SIGNO_DE_SUMA, SIGNO_DE_RESTA,
SIGNO_DE_MULTIPLICACIÓN, SIGNO_DE_DIVISIÓN, SIGNO_DE_RESIDUO, NOT, AND, OR, MAS_MAS,
MENOS_MENOS, MENOR_QUE, MAYOR_QUE, MENOR_O_IGUAL_QUE, MAYOR_O_IGUAL_QUE, DIFERENTE_QUE,
IGUAL_QUE, PARENTESIS_ABRE, PARENTESIS_CIERRA, LLAVE_ABRE, LLAVE_CIERRA, CORCHETE_ABRE,SIGNO_DE_EXPONENTE,
CORCHETE_CIERRA, PUNTOYCOMA,  COMA,  PUNTO, 
RIGHTTEMPLE,RIGHTRIM,LEFTRIM,LEFTTEMPLE,BRIDGE,RIMS, TEMPLATES,
ERROR;

/*----------------------------------------  NO TERMINALES  ---------------------------------------------------------*/
non terminal String t_dato;
non terminal inicio, declaracion_for, if, if_else,
    while, do_while, for, sentencia_booleana, sentencia_for ,datos_array,continua,cuerpo,
    declaraciones,declaracion,bloquesentencias,sentencias,sentencia,expresion,
    expresion_prima,
    termino,
    termino_prima,
    factor,
    sentif,
    sentelse,
    sentwhile,
    sentasignacion,
    sentcut,
    expresiondos,
    expresiontres,
    expresioncuatro,
    op_rel,
    op_art,
    op_log,
    condicion,
    condiciondos, 
    filltriangle,
    setfilamenttype,
    stop,
    getextrusorx,
    getextrusory,
    getextrusorz,
    getfilamenttype,
    setnewfilament,
    getfilament,
    gettemperature,
    drawtriangle,
    fillrectangle,
    drawrectangle,
    sleep,
    drawcircle,
    fillcircle,
    home,
    printerport,
    constructor,
    metodo,
    metodos_parametros,
    metodo_sin_parametros,
    metodo_un_parametro,
    metodo_cuatro_parametros,
    metodo_nueve_parametros,
    metodo_doce_parametros,
    parametros,
    parametrosa,
    parametro,
    main,
    llamar,
    tryycatch,
    get,
    give,
    parametroa,
    rutinas,
    nombres_rutinas,
    parametro_texto,
    parametro_decimal,
    expresioncinco;

/*----------------------------------------  INICIO  ------------------------------------------------------------*/
start with inicio;
inicio ::=  IDENTIFICADOR:nombre PARENTESIS_ABRE PARENTESIS_CIERRA BEGIN bloquesentencias END
    {:
        try{
            TablaSimbolos.crear(nombre, "--","Nombre");
            TablaSimbolos.insertar(nombre, String.valueOf("--"));

            //Crear relacion ciclo PARA con su variable asociada
            TablaSimbolos.lista.push(nombre);          
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :} |
    declaracion IDENTIFICADOR:nombre PARENTESIS_ABRE PARENTESIS_CIERRA BEGIN bloquesentencias END 
    {:
        System.out.println("Linea: "+nombreright);
        try{
            TablaSimbolos.crear(nombre, "--","Nombre");
            TablaSimbolos.insertar(nombre, String.valueOf("--"));

            //Crear relacion ciclo PARA con su variable asociada
            TablaSimbolos.lista.push(nombre);          
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    IDENTIFICADOR:nombre PARENTESIS_ABRE PARENTESIS_CIERRA BEGIN bloquesentencias END IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA BEGIN bloquesentencias END 
    {:
        try{
            TablaSimbolos.crear(nombre, "--","Nombre");
            TablaSimbolos.insertar(nombre, String.valueOf("--"));
            
            //Crear relacion ciclo PARA con su variable asociada
            TablaSimbolos.lista.push(nombre);          
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    error BEGIN;

//bloquesentencias ::= sentencias |;

//sentencias ::= sentencia sentencias | sentencia;

bloquesentencias ::= 
            bloquesentencias declaracion | 
            declaracion |
            bloquesentencias sentif | 
            sentif | 
            bloquesentencias sentwhile | 
            sentwhile | 
            bloquesentencias sentasignacion | 
            sentasignacion | 
            bloquesentencias sentcut | 
            sentcut | 
            bloquesentencias metodo |
            metodo |
            bloquesentencias home |
            home |
            bloquesentencias main |
            main |
            bloquesentencias metodos_parametros|
            metodos_parametros|
            bloquesentencias metodo_sin_parametros|
            metodo_sin_parametros|
            bloquesentencias metodo_un_parametro|
            metodo_un_parametro|
            bloquesentencias metodo_cuatro_parametros|
            metodo_cuatro_parametros|
            bloquesentencias metodo_nueve_parametros|
            metodo_nueve_parametros|
            bloquesentencias metodo_doce_parametros|
            metodo_doce_parametros|
            bloquesentencias for |
            for |
            bloquesentencias tryycatch |
            tryycatch |
            bloquesentencias get|
            get|
            bloquesentencias give|
            give|            
            bloquesentencias rutinas   |
            rutinas |    
            error PUNTOYCOMA | 
            error LLAVE_CIERRA 
; 

/*---------------------------------------- DECLARACION DE VARIABLES -------------------------------------------*/

declaracion ::= 
   
    JUST IDENTIFICADOR:id PUNTOYCOMA   {:
        System.out.println(id+" en la linea: "+(idright+1));
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
            //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO, 
                new Gramatica("declaracion ::= JUST IDENTIFICADOR PUNTOYCOMA ", "Indetificador repetido")));
            }else{
                TablaSimbolos.crear(id, "just","Variable númerica");
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    BROKEN IDENTIFICADOR:id PUNTOYCOMA   {:
        System.out.println(id+" en la linea: "+(idright+1));
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
        //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");    
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= BROKEN IDENTIFICADOR PUNTOYCOMA ", "Indetificador repetido")));
            }else{
                TablaSimbolos.crear(id, "broken","Variable flotante");
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    WORD IDENTIFICADOR:id PUNTOYCOMA   {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");    
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= WORD IDENTIFICADOR PUNTOYCOMA ", "Indetificador repetido")));
            }else{
                TablaSimbolos.crear(id, "word","Variable tipo cadena");
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);      
            }   
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    FLAG IDENTIFICADOR:id PUNTOYCOMA   {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");    
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= FLAG IDENTIFICADOR PUNTOYCOMA ", "Indetificador repetido")));
            }else{
                TablaSimbolos.crear(id, "flag","Variable booleana");
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);     
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    :}|
    //********************* DECLARACION E INICIALIZACION  ******************* *//
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");   
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= JUST IDENTIFICADOR = NUMERO PUNTOYCOMA ", "Variable repetida")));
            }else{
                TablaSimbolos.crear(id, "just","Variable númerica");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");     
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO, new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA ", "Variable repetido")));
            }else{
                TablaSimbolos.crear(id, "broken","Variable flotante");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL DECIMAL:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");     
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO, new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA ", "Variable repetido")));
            }else{
                TablaSimbolos.crear(id, "broken","Variable flotante");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL CADENA_TEXTO:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");   
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= WORD IDENTIFICADOR = CADENA_TEXTO PUNTOYCOMA ", "Variable repetida")));
            }else{
                TablaSimbolos.crear(id, "word","Variable tipo cadena");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);  
            }        
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL TRUE:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");     
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= FLAG IDENTIFICADOR = TRUE PUNTOYCOMA ", "Variable repetida")));
            }else{
                TablaSimbolos.crear(id, "flag","Variable tipo booleana");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id); 
            }         
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL FALSE:valor PUNTOYCOMA 
    {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");       
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= FLAG IDENTIFICADOR = FALSE PUNTOYCOMA ", "Variable repetida")));
            }else{
                TablaSimbolos.crear(id, "flag","Variable tipo booleana");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id); 
            }            
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}|
    t_dato CORCHETE_ABRE CORCHETE_CIERRA IDENTIFICADOR SIGNO_DE_IGUAL t_dato CORCHETE_ABRE NUMERO CORCHETE_CIERRA PUNTOYCOMA |
    t_dato CORCHETE_ABRE CORCHETE_CIERRA IDENTIFICADOR SIGNO_DE_IGUAL LLAVE_ABRE datos_array LLAVE_CIERRA PUNTOYCOMA |
    IDENTIFICADOR IDENTIFICADOR SIGNO_DE_IGUAL NEW IDENTIFICADOR PARENTESIS_ABRE parametrosa PARENTESIS_CIERRA PUNTOYCOMA |
    
    //""""""""""""""""""""""""""""""""""""""""""""    ERRORES DE TIOS      """"""""""""""""""""""""""""""""""""""""""""""""""""
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL DECIMAL:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR SIGNO_DE_IGUAL NUMERO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL CADENA_TEXTO:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor "+valor+" no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR SIGNO_DE_IGUAL NUMERO PUNTOYCOMA", "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL TRUE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR SIGNO_DE_IGUAL NUMERO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL FALSE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL CADENA_TEXTO:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor "+valor+" no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA", "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL FALSE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL TRUE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |  
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL DECIMAL:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL FALSE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL TRUE:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL CADENA_TEXTO:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor "+valor+" no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR SIGNO_DE_IGUAL TRUE|FALSE PUNTOYCOMA", "Error semántico, el valor "+valor+" no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR SIGNO_DE_IGUAL TRUE|FALSE PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL DECIMAL:valor PUNTOYCOMA {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato." );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.", idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR SIGNO_DE_IGUAL TRUE|FALSE PUNTOYCOMA", "Error semántico, el valor '"+valor+"' no corresponde con el tipo de dato.")));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    //"""""""""""""""""""""""""""""""""""""""""""" ERRORES DE PUNTO Y COMA """"""""""""""""""""""""""""""""""""""""""""""""""""
    JUST:tipo IDENTIFICADOR:id{:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: declaración: JUST "+id);   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: JUST "+id, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR PUNTOYCOMA", "Falta punto y coma en declaración: JUST "+id)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    BROKEN:tipo IDENTIFICADOR:id {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: BROKEN "+id );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: BROKEN "+id, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= BROKEN IDENTIFICADOR PUNTOYCOMA ", "Falta punto y coma en declaración: BROKEN "+id)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id{:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: FLAG "+id );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: FLAG "+id, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR PUNTOYCOMA ", "Falta punto y coma en declaración: FLAG "+id)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    WORD:tipo IDENTIFICADOR:id{:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: WORD "+id );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: WORD "+id, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR PUNTOYCOMA ", "Falta punto y coma en declaración: WORD "+id)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    JUST:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: JUST "+id+" = "+valor );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: JUST "+id+" = "+valor, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= JUST IDENTIFICADOR SIGNO_DE_IGUAL NUMERO PUNTOYCOMA", "Falta punto y coma en declaración: JUST "+id+" = "+valor)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} | 
    BROKEN:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL DECIMAL:valor {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: BROKEN "+id+" = "+valor );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: BROKEN "+id+" = "+valor, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= BROKEN IDENTIFICADOR SIGNO_DE_IGUAL DECIMAL PUNTOYCOMA ", "Falta punto y coma en declaración: BROKEN "+id+" = "+valor)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL TRUE:valor {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: FLAG "+id+" = "+valor );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: FLAG "+id+" = "+valor, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR SIGNO_DE_IGUAL TRUE PUNTOYCOMA ", "Falta punto y coma en declaración: FLAG "+id+" = "+valor)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    FLAG:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL FALSE:valor {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: FLAG "+id+" = "+valor );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: FLAG "+id+" = "+valor, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= FLAG IDENTIFICADOR SIGNO_DE_IGUAL FALSE PUNTOYCOMA ", "Falta punto y coma en declaración: FLAG "+id+" = "+valor)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} |
    WORD:tipo IDENTIFICADOR:id SIGNO_DE_IGUAL CADENA_TEXTO:valor {:
         try{                
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. Falta punto y coma en declaración: WORD "+id+" = "+valor );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. Falta punto y coma en declaración: WORD "+id+" = "+valor, idright+1,SINTACTICO,
            new Gramatica("declaracion ::= WORD IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA ", "Falta punto y coma en declaración: WORD "+id+" = "+valor)));

        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :}
    
;

t_dato ::= BROKEN:td{: RESULT =  td;:}|
        JUST:td{: RESULT =  td;:}|
        WORD:td{: RESULT =  td;:}|
        FLAG:td{: RESULT =  td;:}
;

/*---------------------------------------- EXPRESIONES ------------------------------------------------------------*/
expresion ::= 
    expresion:e SIGNO_DE_SUMA termino:t {:
        if (e instanceof Integer){
            if(t instanceof String){
                String str = ((String) t).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (tright+1) + ". Error semántico. No se puede sumar una variable 'just' y una 'word'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede sumar una variable 'just' y una 'word'", tright+1,SINTACTICO,
                    new Gramatica("expresion ::= expresion SIGNO_DE_SUMA termino", "No se puede sumar una variable 'just' y una 'word'")));                          
                }
            }
        }
        if (t instanceof Integer){
            if(e instanceof String){
                String str = ((String) e).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (eright+1) + ". Error semántico. No se puede sumar una variable 'word' y una 'just'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede sumar una variable 'word' y una 'just'", eright+1,SINTACTICO,
                    new Gramatica("expresion ::= expresion SIGNO_DE_SUMA termino", "No se puede sumar una variable 'word' y una 'just'")));                          
                }
            }
        }

        //System.out.println("EMPIEZA EXPRESION");
        RESULT = e+"+"+t;
        //System.out.println("termino: "+t);
        //System.out.println("exp: "+e);
    :} |
    expresion:e SIGNO_DE_RESTA termino:t {:
        if (e instanceof Integer){
            if(t instanceof String){
                String str = ((String) t).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (tright+1) + ". Error semántico. No se puede restar una variable 'just' y una 'word'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede restar una variable 'just' y una 'word'", tright+1,SINTACTICO,
                    new Gramatica("expresion ::= expresion SIGNO_DE_SUMA termino", "No se puede restar una variable 'just' y una 'word'")));                          
                }
            }
        }
        if (t instanceof Integer){
            if(e instanceof String){
                String str = ((String) e).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (eright+1) + ". Error semántico. No se puede restar una variable 'word' y una 'just'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede restar una variable 'word' y una 'just'", eright+1,SINTACTICO,
                    new Gramatica("expresion ::= expresion SIGNO_DE_SUMA termino", "No se puede restar una variable 'word' y una 'just'")));                          
                }
            }
        }
        //System.out.println("EMPIEZA EXPRESION");
        RESULT = e+"-"+t;
        //System.out.println("termino: "+t);
        //System.out.println("exp: "+e);
    :} |
    termino:t {:
        RESULT = t; 
        //System.out.println("EMPIEZA EXPRESION");        
        //System.out.println("termino: "+t);
        :} 
;
    
termino ::= factor:f1 SIGNO_DE_MULTIPLICACIÓN factor:f2 {:
        RESULT = f1+"*"+f2;
        if (f1 instanceof Integer){
            if(f2 instanceof String){
                String str = ((String) f2).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (f2right+1) + ". Error semántico. No se puede multiplicar una variable 'just' y una 'word'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede multiplicar una variable 'just' y  una 'word'", f2right+1,SINTACTICO,
                    new Gramatica("termino ::= factor: SIGNO_DE_MULTIPLICACIÓN factor", "No se puede multiplicar una variable 'just' y una 'word'")));          
                }
                else
                    System.out.println("**"+f2+": f2  es varibale");                    
            }
        }
        if (f1 instanceof String){
           if(f2 instanceof Integer){
                String str = ((String) f1).substring(0, 1);
                if(str.equals("\"")){
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (f2right+1) + ". Error semántico. No se puede multiplicar una variable 'word' una 'just'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede multiplicar una variable 'word' una 'just'", f2right+1,SINTACTICO,
                    new Gramatica("termino ::= factor: SIGNO_DE_MULTIPLICACIÓN factor", "No se puede multiplicar una variable 'word' una 'just'")));
                }
            }
        }
        //System.out.println("factor1 "+f1);
        //System.out.println("factor2 "+f2);
    :} |
    factor:f1 SIGNO_DE_DIVISIÓN factor:f2 {:
    System.out.println("EMPIEZA TERMINO");
        RESULT = f1+"/"+f2;
        if (f1 instanceof Integer){
            if(f2 instanceof String){
                String str = ((String) f2).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (f2right+1) + ". Error semántico. No se puede dividir una variable 'just' y una 'word'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede dividir una variable 'just' y una 'word'", f2right+1,SINTACTICO,
                    new Gramatica("termino ::= factor: SIGNO_DE_MULTIPLICACIÓN factor", "No se puede dividir una variable 'just' y una 'word'")));
                }
                else
                    System.out.println("**"+f2+": f2  es varibale");
            }
        }
        if (f1 instanceof String){
            if(f2 instanceof Integer){
                String str = ((String) f1).substring(0, 1);
                if(str.equals("\"")){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (f2right+1) + ". Error semántico. No se puede dividir una variable 'word' y una 'just'" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. No se puede dividir una variable 'word' y una 'just'", f2right+1,SINTACTICO,
                    new Gramatica("termino ::= factor: SIGNO_DE_MULTIPLICACIÓN factor", "No se puede dividir una variable 'word' y una 'just'")));
                }
            }
        }
        //System.out.println("factor1 "+f1);
        //System.out.println("factor2 "+f2);
    :} |
    factor:f {:RESULT = f; 
        //System.out.println("EMPIEZA TERMINO");
        //System.out.println("factor "+f);
    :} 
;
    
factor ::= 
    PARENTESIS_ABRE expresion:e PARENTESIS_CIERRA {:
        //System.out.println("EMPIEZA FACTOR");
        RESULT =  "("+e+")";
        //System.out.println("exp: "+e);
    :} |
    IDENTIFICADOR:f  {:
        Simbolo sim = TablaSimbolos.buscar(f);
        //Si es nulo, devuelvo un error
        if (sim == null) {
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (fright+1) + ". Error semántico. La variable '"+f+"' no existe" );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+f+"' no existe", fright+1,SINTACTICO,
            new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL expresion PUNTOYCOMA","Error semántico. La variable '"+f+"' no existe")));
            System.out.println("El identificador '"+f+"' no existe");
                
            RESULT = 0; 
        }
        else{
            System.out.println("*****id: "+sim.valor);  
            RESULT = sim.valor; 
        };
    :}     | 
    NUMERO:f {:RESULT = f; ;
    :}   | 
    DECIMAL:f {:RESULT = f; ;
    :} 
    |
    error:e{: 
       JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (eright+1) + ". Error sintáctico. La expresión no esta bien escrita" );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La expresión no esta bien escrita", eright+1,SINTACTICO,
            new Gramatica("factor ::= expresion | NUMERO | DECIMAL | IDENTIFICADOR","Error sintáctico. La expresión no esta bien escrita")));
    :}
;
/*
expresion ::= NUMERO | IDENTIFICADOR | PARENTESIS_ABRE  expresion op_art expresion PARENTESIS_CIERRA;
*/
op_rel ::= MAYOR_QUE | MENOR_QUE | MAYOR_O_IGUAL_QUE | MENOR_O_IGUAL_QUE | DIFERENTE_QUE | IGUAL_QUE;
op_art ::= SIGNO_DE_SUMA | SIGNO_DE_RESTA | SIGNO_DE_DIVISIÓN | SIGNO_DE_MULTIPLICACIÓN ;
op_log ::= OR | AND;


// sentif ::=  IF PARENTESIS_ABRE condicion PARENTESIS_CIERRA LLAVE_ABRE  bloquesentencias LLAVE_CIERRA {:
//                 //VentanaPrincipal.intercode = VentanaPrincipal.intercode + "if(";//
//             :} 
//             |  error:e {: 
//             JLabel lb = new JLabel();
//             lb.setForeground(new Color(217, 33, 51));
//             lb.setFont(new Font("Verdana", Font.PLAIN, 14));
//             lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
//             lb.setText("Error en la línea " + (eright+1) + ". Error sintáctico. El bloque 'if' no está bien escrito" );   
//             VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. El bloque 'if' no está bien escrito", eright+1,SINTACTICO,
//             new Gramatica("factor ::= expresion | NUMERO | DECIMAL | IDENTIFICADOR","Error sintáctico. El bloque 'if' no está bien escrito")));
//     :} sentelse
// ;
// sentelse ::= ELSE LLAVE_ABRE bloquesentencias LLAVE_CIERRA |  
//             error:e{: 
//             JLabel lb = new JLabel();
//             lb.setForeground(new Color(217, 33, 51));
//             lb.setFont(new Font("Verdana", Font.PLAIN, 14));
//             lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
//             lb.setText("Error en la línea " + (eright+1) + ". Error sintáctico. El bloque 'else' no está bien escrito" );   
//             VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. El bloque 'else' no está bien escrito", eright+1,SINTACTICO,
//             new Gramatica("factor ::= expresion | NUMERO | DECIMAL | IDENTIFICADOR","Error sintáctico. El bloque 'else' no está bien escrito")));;
//             :}
// ;

sentif ::=  IF PARENTESIS_ABRE condicion PARENTESIS_CIERRA LLAVE_ABRE  
                bloquesentencias 
            LLAVE_CIERRA
                sentelse
;
sentelse ::= ELSE LLAVE_ABRE 
                    bloquesentencias 
                LLAVE_CIERRA |  
;

sentwhile ::= WHILE PARENTESIS_ABRE condicion PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA;
sentasignacion ::= 
        IDENTIFICADOR:identificador SIGNO_DE_IGUAL CADENA_TEXTO:v PUNTOYCOMA {:
            Simbolo sim = TablaSimbolos.buscar(identificador);
            //Si es nulo, devuelvo un error
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (vright+1) + ". Error semántico. La variable '"+identificador+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+identificador+"' no existe", vright+1,SINTACTICO,
                new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL CADENA_TEXTO PUNTOYCOMA","Error semántico. La variable '"+identificador+"' no existe")));
                System.out.println("El identificador '"+identificador+"' no existe");
            }else{
                sim.setValor(v);
            }
        :} |
        IDENTIFICADOR:identificador SIGNO_DE_IGUAL FALSE:v PUNTOYCOMA {:
            Simbolo sim = TablaSimbolos.buscar(identificador);
            //Si es nulo, devuelvo un error
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (vright+1) + ". Error semántico. La variable '"+identificador+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+identificador+"' no existe", vright+1,SINTACTICO,
                new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL FALSE PUNTOYCOMA","Error semántico. La variable '"+identificador+"' no existe")));
                System.out.println("El identificador '"+identificador+"' no existe");
            }else{
                sim.setValor("false");
            }
        :} |
        IDENTIFICADOR:identificador SIGNO_DE_IGUAL TRUE:v PUNTOYCOMA {:
            Simbolo sim = TablaSimbolos.buscar(identificador);
            //Si es nulo, devuelvo un error
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (vright+1) + ". Error semántico. La variable '"+identificador+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+identificador+"' no existe", vright+1,SINTACTICO,
                new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL TRUE PUNTOYCOMA","Error semántico. La variable '"+identificador+"' no existe")));
                System.out.println("El identificador '"+identificador+"' no existe");
            }else{
                sim.setValor("true");
            }
        :} |
        IDENTIFICADOR:identificador SIGNO_DE_IGUAL expresion:e PUNTOYCOMA{:
        //Buscar variable en la tabla de simbolos
        Simbolo sim = TablaSimbolos.buscar(identificador);
        //Si es nulo, devuelvo un error
        if (sim == null) {
            JLabel lb = new JLabel();
            lb.setForeground(new Color(217, 33, 51));
            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            lb.setText("Error en la línea " + (identificadorright+1) + ". Error semántico. La variable '"+identificador+"' no existe" );   
            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+identificador+"' no existe", identificadorright+1,SINTACTICO,
            new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL expresion PUNTOYCOMA","Error semántico. La variable '"+identificador+"' no existe")));
            System.out.println("El identificador '"+identificador+"' no existe");
        }
        else{
            if(sim.tipo.equals("just") || sim.tipo.equals("broken")){
                VentanaPrincipal.exp = identificador +"="+ String.valueOf(e);
                // resolverExp(VentanaPrincipal.exp);
            }
            else{ 
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (identificadorright+1) + ". Error semántico. La variable '"+identificador+"' no es de algún tipo numérico" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+identificador+"' no es de algún tipo numérico", identificadorright+1,SINTACTICO,
                new Gramatica("sentasignacion ::= IDENTIFICADOR SIGNO_DE_IGUAL expresion PUNTOYCOMA","Error semántico. La variable '"+identificador+"' no es de algún tipo numérico")));           
            }
        }
    :}
;

sentcut ::= CUT PUNTOYCOMA;

condicion ::= IDENTIFICADOR:id IGUAL_QUE FALSE {:
            Simbolo sim = TablaSimbolos.buscar(id);
        
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                new Gramatica("condicion ::= IDENTIFICADOR IGUAL_QUE FALSE","Error sintáctico. La variable '"+id+"' no existe")));
                System.out.println("El identificador '"+id+"' no existe");
            }
            else{
                if(!sim.tipo.equals("flag")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo flag" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo flag", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= IDENTIFICADOR IGUAL_QUE FALSE","Error semántico. La variable '"+id+"' no es de tipo flag")));           
                }
            }
        :} |
        IDENTIFICADOR:id IGUAL_QUE TRUE {:
            Simbolo sim = TablaSimbolos.buscar(id);
        
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                new Gramatica("condicion ::= IDENTIFICADOR IGUAL_QUE TRUE","Error sintáctico. La variable '"+id+"' no existe")));
                System.out.println("El identificador '"+id+"' no existe");
            }
            else{
                if(!sim.tipo.equals("flag")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo flag" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo flag", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= IDENTIFICADOR IGUAL_QUE TRUE","Error semántico. La variable '"+id+"' no es de tipo flag")));           
                }
            }
        :} |
        FALSE IGUAL_QUE IDENTIFICADOR:id{:
            Simbolo sim = TablaSimbolos.buscar(id);
        
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                new Gramatica("condicion ::= FALSE IGUAL_QUE IDENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
                System.out.println("El identificador '"+id+"' no existe");
            }
            else{
                if(!sim.tipo.equals("flag")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo flag" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo flag", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= FALSE IGUAL_QUE IDENTIFICADOR","Error semántico. La variable '"+id+"' no es de tipo flag")));           
                }
            }
        :} |
        TRUE IGUAL_QUE IDENTIFICADOR:id {:
            Simbolo sim = TablaSimbolos.buscar(id);
        
            if (sim == null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
                System.out.println("El identificador '"+id+"' no existe");
            }
            else{
                if(!sim.tipo.equals("flag")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo flag" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo flag", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error semántico. La variable '"+id+"' no es de tipo flag")));           
                }
            }
        :} |
        IDENTIFICADOR:id op_rel NUMERO:num {:
            Simbolo sim = TablaSimbolos.buscar(id);
            //VentanaPrincipal.intercode = VentanaPrincipal.intercode + id + "==" + num;//
            if (sim == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
            }
            else{
                if(!sim.tipo.equals("just")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo just" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo just", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error semántico. La variable '"+id+"' no es de tipo just")));           
                }
            }
        :} |
        NUMERO:num op_rel IDENTIFICADOR:id {:
            Simbolo sim = TablaSimbolos.buscar(id);        
            if (sim == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
            }
            else{
                if(!sim.tipo.equals("just")){ 
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable '"+id+"' no es de tipo just" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id+"' no es de tipo just", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IDENTIFICADOR","Error semántico. La variable '"+id+"' no es de tipo just")));           
                }
            }
        :} |
        IDENTIFICADOR:id_1 op_rel IDENTIFICADOR:id_2 {:
            Simbolo sim_1 = TablaSimbolos.buscar(id_1);
            Simbolo sim_2 = TablaSimbolos.buscar(id_2);
        
            if (sim_1 == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (id_1right+1) + ". Error sintáctico. La variable '"+id_1+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id_1+"' no existe", id_1right+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IFENTIFICADOR","Error sintáctico. La variable '"+id_1+"' no existe")));
            }
            else{
                if (sim_2 == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (id_2right+1) + ". Error sintáctico. La variable '"+id_2+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id_2+"' no existe", id_2right+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IFENTIFICADOR","Error sintáctico. La variable '"+id_2+"' no existe")));
                }else
                    if(sim_1.tipo.equals("just") && !sim_2.tipo.equals("cad")){ 
                        JLabel lb = new JLabel();
                        lb.setForeground(new Color(217, 33, 51));
                        lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                        lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        lb.setText("Error en la línea " + (id_1right+1) + ". Error semántico. La variable '"+id_1+"' es del tipo "+sim_1.tipo+" y la varibale '"+id_2+"' es del tipo "+sim_2+".");   
                        VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable '"+id_1+"' es del tipo "+sim_1.tipo+" y la varibale '"+id_2+"' es del tipo "+sim_2+".", id_1right+1,SINTACTICO,
                        new Gramatica("condicion ::= IDENTIFICADOR IGUAL_QUE IDENTIFICADOR","Error semántico. La variable '"+id_1+"' es del tipo "+sim_1.tipo+" y la varibale '"+id_2+"' es del tipo "+id_2+".")));           
                    }
            }
        :} | 
        NUMERO op_rel NUMERO |

;


metodos_parametros ::=
    metodo_sin_parametros    PARENTESIS_ABRE PARENTESIS_CIERRA PUNTOYCOMA |
    metodo_un_parametro      PARENTESIS_ABRE parametroa PARENTESIS_CIERRA PUNTOYCOMA |
    metodo_cuatro_parametros PARENTESIS_ABRE parametroa COMA parametroa COMA parametroa COMA parametroa PARENTESIS_CIERRA PUNTOYCOMA |
    metodo_nueve_parametros  PARENTESIS_ABRE parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa PARENTESIS_CIERRA PUNTOYCOMA |
    metodo_doce_parametros   PARENTESIS_ABRE parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa COMA parametroa PARENTESIS_CIERRA PUNTOYCOMA;

metodo_doce_parametros ::= FILLRECTANGLE | DRAWRECTANGLE;
 
metodo_nueve_parametros ::= FILLTRIANGLE | DRAWTRIANGLE;

metodo_cuatro_parametros ::=  DRAWCIRCLE | FILLCIRCLE;

metodo_un_parametro ::= SETFILAMENTTYPE | SETNEWFILAMENT |  PRINTERPORT; 

metodo_sin_parametros ::= 
    STOP |
    GETEXTRUSORX |
    GETEXTRUSORY |
    GETEXTRUSORZ |
    SLEEP |
    GETFILAMENT |
    GETFILAMENTTYPE |
    HOME |
    GETTEMPERATURE;

metodo ::= METHOD IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA | MODEL IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA PUNTOYCOMA;

constructor ::= IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA;

main ::= MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA;

parametros ::= parametro COMA parametros 
            | parametro |;

parametro ::= t_dato:td IDENTIFICADOR:id {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("declaracion ::= WORD IDENTIFICADOR PUNTOYCOMA ", "semántico repetido")));
            }else{
                if(td.equals("word"))
                    TablaSimbolos.crear(id, "word","Variable tipo cadena en parmetro");
                if(td.equals("just"))
                    TablaSimbolos.crear(id, "just","Variable tipo númerica en parmetro");
                if(td.equals("flag"))
                    TablaSimbolos.crear(id, "word","Variable tipo booleana en parmetro");
                if(td.equals("broken"))
                    TablaSimbolos.crear(id, "word","Variable tipo flotante en parmetro");
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);      
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                           
    
    :}
;

parametrosa ::= parametroa | parametroa COMA parametrosa;

parametroa ::= IDENTIFICADOR | NUMERO;


for ::= FOR PARENTESIS_ABRE sentencia_for PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA ;


sentencia_for ::=
   IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA condicion PUNTOYCOMA declaracion_for {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim == null) {
                System.out.println("El identificador '"+id+"' ya existe");   
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' no existe." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' no existe.", idright+1,SINTACTICO,
                new Gramatica("sentencia_for ::= IDENTIFICADOR SIGNO_DE_IGUAL NUMERO PUNTOYCOMA condicion PUNTOYCOMA declaracion_for", "Variable repetida")));
            }else{
                //TablaSimbolos.crear(id, "just","Variable númerica en ciclo for");
                //TablaSimbolos.insertar(id, String.valueOf(valor));
                sim.setValor(valor);
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}  |
   JUST IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA condicion PUNTOYCOMA declaracion_for{:
        try{
            Simbolo sim = TablaSimbolos.buscar(id);
             //Si es nulo, devuelvo un error
            if (sim != null) {
                System.out.println("El identificador '"+id+"' ya existe");   
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable: '"
                +id+"' ya está declarada." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable: '"
                +id+"' ya está declarada.", idright+1,SINTACTICO,
                new Gramatica("sentencia_for ::= IDENTIFICADOR:id SIGNO_DE_IGUAL NUMERO:valor PUNTOYCOMA condicion PUNTOYCOMA declaracion_for", "Variable repetida")));
            }else{
                TablaSimbolos.crear(id, "just","Variable númerica en ciclo for");
                TablaSimbolos.insertar(id, String.valueOf(valor));
                //Crear relacion ciclo PARA con su variable asociada
                TablaSimbolos.lista.push(id);          
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }                      
    :}  ;

declaracion_for ::=  |
    IDENTIFICADOR MAS_MAS | 
    MAS_MAS IDENTIFICADOR
;

sentencia_booleana ::= 
    IDENTIFICADOR op_rel TRUE |
    IDENTIFICADOR op_rel FALSE |
    IDENTIFICADOR op_rel NUMERO |
    IDENTIFICADOR op_rel IDENTIFICADOR |
    IDENTIFICADOR PUNTO SAME PARENTESIS_ABRE CADENA_TEXTO PARENTESIS_CIERRA 
;

tryycatch ::= CHECK LLAVE_ABRE bloquesentencias LLAVE_CIERRA TRAP PARENTESIS_ABRE IDENTIFICADOR IDENTIFICADOR PARENTESIS_CIERRA LLAVE_ABRE bloquesentencias LLAVE_CIERRA;
    
get ::= GET PARENTESIS_ABRE CADENA_TEXTO PARENTESIS_CIERRA PUNTOYCOMA;

give ::= GIVE PARENTESIS_ABRE IDENTIFICADOR PARENTESIS_CIERRA PUNTOYCOMA;

rutinas ::= 
    nombres_rutinas:id PARENTESIS_ABRE parametro_texto COMA parametro_decimal:primero COMA parametro_decimal:segundo COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal  PARENTESIS_CIERRA PUNTOYCOMA {:
        try{
            Simbolo sim = TablaSimbolos.buscar(id.toString());
            //Si es nulo, devuelvo un error
            if (sim != null) {
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (idright+1) + ". Error semántico. La rutina: '"
                +id+"' ya existe." );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. La rutina: '"
                +id+"' ya existe.", idright+1,SINTACTICO, 
                new Gramatica("rutinas ::= nombres_rutinas PARENTESIS_ABRE parametro_texto COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal  PARENTESIS_CIERRA PUNTOYCOMA", 
                "Indetificador repetido")));
            }else{
                double sePa = Double.valueOf(segundo.toString());
                double prPa = Double.valueOf(primero.toString());
                if(sePa>prPa){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico. El segundo parámetro ("+segundo+") debe ser menor que el primero ("+primero+")." );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. El segundo parámetro ("+segundo+") debe ser menor que el primero ("+primero+").", idright+1,SINTACTICO, 
                    new Gramatica(
                        "rutinas ::= nombres_rutinas PARENTESIS_ABRE parametro_texto COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal PARENTESIS_CIERRA PUNTOYCOMA"
                        ,"Parámetro invalido")));
                    // new Gramatica("rutinas ::= nombres_rutinas PARENTESIS_ABRE parametro_texto COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal COMA parametro_decimal PARENTESIS_CIERRA PUNTOYCOMA", 
                    // "Parámetro invalido")));
                }else{
                    TablaSimbolos.crear(id.toString(), "rutina","rutina");
                    TablaSimbolos.lista.push(id.toString());   
                }   
            }
        }
        catch(Exception e){                                    
            e.printStackTrace();
            TablaSimbolos.log.log(Level.SEVERE, "Error al agregar la variable::: " + e.getMessage());
        }   
    :} 
;

parametro_texto ::=
    IDENTIFICADOR:id {:
        Simbolo sim = TablaSimbolos.buscar(id);        
            if (sim == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IFENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
            }else{
                if(sim.getTipo()!="word"){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico, la variable '"+id+"' debe ser de tipo WORD" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, la variable '"+id+"' debe ser de tipo WORD", idright+1,SINTACTICO,
                    new Gramatica("rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA", "Error semántico, la variable '"+id+"' debe ser de tipo WORD")));
                }else{
                    if(sim.getValor()==null){
                        JLabel lb = new JLabel();
                        lb.setForeground(new Color(217, 33, 51));
                        lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                        lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        lb.setText("Error en la línea " + (idright+1) + ". Error semántico, la variable '"+id+"' no ha sido inicializada" );   
                        VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, la variable '"+id+"' no ha sido inicializada", idright+1,SINTACTICO,
                        new Gramatica("rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA", "Error semántico, la variable '"+id+"' no ha sido inicializada")));
                    }                    
                }
            }
    
    :}
    | CADENA_TEXTO;

parametro_decimal ::=
    IDENTIFICADOR:id {:
        Simbolo sim = TablaSimbolos.buscar(id);        
            if (sim == null) {
                JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error sintáctico. La variable '"+id+"' no existe" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error sintáctico. La variable '"+id+"' no existe", idright+1,SINTACTICO,
                    new Gramatica("condicion ::= TRUE IGUAL_QUE IFENTIFICADOR","Error sintáctico. La variable '"+id+"' no existe")));
            }else{
                if(sim.getTipo()!="just" && sim.getTipo()!="broken"){
                    JLabel lb = new JLabel();
                    lb.setForeground(new Color(217, 33, 51));
                    lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                    lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    lb.setText("Error en la línea " + (idright+1) + ". Error semántico, la variable '"+id+"' debe ser de algún tipo numérico" );   
                    VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, la variable '"+id+"' debe ser de algún tipo numérico", idright+1,SINTACTICO,
                    new Gramatica("rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA", "Error semántico, la variable '"+id+"' debe ser de algún tipo numérico")));
                }else{
                    if(sim.getValor()==null){
                        JLabel lb = new JLabel();
                        lb.setForeground(new Color(217, 33, 51));
                        lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                        lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        lb.setText("Error en la línea " + (idright+1) + ". Error semántico, la variable '"+id+"' no ha sido inicializada" );   
                        VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico, la variable '"+id+"' no ha sido inicializada", idright+1,SINTACTICO,
                        new Gramatica("rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA", "Error semántico, la variable '"+id+"' no ha sido inicializada")));
                    }             
                    else{
                        Object o = id;
                        if(o instanceof String){
                            JLabel lb = new JLabel();
                            lb.setForeground(new Color(217, 33, 51));
                            lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                            lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                            lb.setText("Error en la línea " + (idright+1) + ". Error semántico. El parametro '"+id+"' debe de ser un número" );   
                            VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. El parametro '"+id+"' debe de ser un número" , idright+1,SINTACTICO,
                            new Gramatica(
                                "rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA"
                                , "Error semántico. El parametro '"+id+"' debe de ser un número")));                         
                        }else{
                            RESULT = 0;
                        }
                    }       
                }
            }
    
    :}
    |   DECIMAL:e{:
             Object o = e;
            if(o instanceof String){
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (eright+1) + ". Error semántico. El parametro '"+e+"' debe de ser un número" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. El parametro '"+e+"' debe de ser un número" , eright+1,SINTACTICO,
                new Gramatica(
                    "rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA"
                    , "Error semántico. El parametro '"+e+"' debe de ser un número")));                         
            }else{
                RESULT = e;
            }
    :}| NUMERO:e{:
            Object o = e;
            if(o instanceof String){
                JLabel lb = new JLabel();
                lb.setForeground(new Color(217, 33, 51));
                lb.setFont(new Font("Verdana", Font.PLAIN, 14));
                lb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                lb.setText("Error en la línea " + (eright+1) + ". Error semántico. El parametro '"+e+"' debe de ser un número" );   
                VentanaPrincipal.labelsErrores.add(new LabelError(lb, "Error semántico. El parametro '"+e+"' debe de ser un número" , eright+1,SINTACTICO,
                new Gramatica(
                    "rutina ::= nombre_rutina PARENTESIS_ABRE CADENA_TEXTO COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN COMA BROKEN PARENTESIS_CIERRA PUNTOYCOMA"
                    , "Error semántico. El parametro '"+e+"' debe de ser un número")));                         
            }else{
                RESULT = e;
            }
    :}
;

nombres_rutinas ::= 
    RIGHTTEMPLE:id {:
    RESULT = id; :} | 
    LEFTTEMPLE:id {:
    RESULT = id; :} | 
    RIGHTRIM:id {:
    RESULT = id; :} | 
    LEFTRIM:id {:
    RESULT = id; :} | 
    BRIDGE:id {:
    RESULT = id; :} | 
    TEMPLATES:id {:
    RESULT = id; :} | 
    RIMS:id {:
    RESULT = id; :}
;